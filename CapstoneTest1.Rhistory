library(readr)
Capstone_CFA_Scores_and_Lines <- read_csv("~/R/Capstone CFA Scores and Lines.csv")
View(Capstone_CFA_Scores_and_Lines)
library("dplyr", lib.loc="~/R/win-library/3.4")
library("tidyr", lib.loc="~/R/win-library/3.4")
library("magrittr", lib.loc="~/R/win-library/3.4")
dfCapSL <- Capstone_CFA_Scores_and_Lines
separate(dfCapSL, Score, c("Away Score", "Home Score"), sep = "-")
View(dfCapSL)
dfCapSL <- separate(dfCapSL, Score, c("Away Score", "Home Score"), sep = "-")
mutate(dfCapSL, if Away Score > Home Score){Winner = Away Team}
mutate(dfCapSL, if dfCapSL$Away Score > dfCapSL$Home Score){Winner = dfCapSL$`Away Team`} else{Winner = dfCapSL$`Home Team`}
mutate(dfCapSL, if (dfCapSL$Away Score > dfCapSL$Home Score){Winner = dfCapSL$`Away Team`} else{Winner = dfCapSL$`Home Team`}
mutate(dfCapSL, if (dfCapSL$`Away Score` > dfCapSL$`Home Score`){Winner = dfCapSL$`Away Team`} else{Winner = dfCapSL$`Home Team`})
dfCapSL2 <- mutate(dfCapSL, if (dfCapSL$`Away Score` > dfCapSL$`Home Score`){Winner = dfCapSL$`Away Team`} else{Winner = dfCapSL$`Home Team`})
view(dfCapSL2)
View(dfCapSL2)
dfCapSL2 <- mutate(dfCapSL, if (dfCapSL$`Away Score` > dfCapSL$`Home Score`){"Winner" = dfCapSL$`Away Team`} else{"Winner" = dfCapSL$`Home Team`})
View(winner)
dfCapSL2$Game Winner <- dfCapSL2$`if (dfCapSL$`Away Score` > dfCapSL$`Home Score`) {
"Winner" = dfCapSL$`Away Team`
} else {
"Winner" = dfCapSL$`Home Team`
}`
`colnames(dfCapSL2$`if (dfCapSL$`Away Score` > dfCapSL$`Home Score`) {
"Winner" = dfCapSL$`Away Team`
} else {
"Winner" = dfCapSL$`Home Team`
}`) <- "Game Winner"
colnames(dfCapSL2)[14] <- "Game Winner"
View(dfCapSL2)
dfLine <- c(dfCapSL2$`Away Team`, dfCapSL2$`Home Team`, dfCapSL2$Line, dfCapSL2$ATOR, dfCapSL2$ATDR, dfCapSL2$HTOR, dfCapSL2$HTDR, dfCapSL2$`Away Score`, dfCapSL2$`Home Score`)
View(dfLine)
dfLine <- select(dfCapSL2, dfCapSL2$`Away Team`, dfCapSL2$`Home Team`, dfCapSL2$Line, dfCapSL2$ATOR, dfCapSL2$ATDR, dfCapSL2$HTOR, dfCapSL2$HTDR, dfCapSL2$`Away Score`, dfCapSL2$`Home Score`)
library("dplyr", lib.loc="~/R/win-library/3.4")
library("magrittr", lib.loc="~/R/win-library/3.4")
library("tidyr", lib.loc="~/R/win-library/3.4")
dfLine <- select(dfCapSL2, dfCapSL2$`Away Team`, dfCapSL2$`Home Team`, dfCapSL2$Line, dfCapSL2$ATOR, dfCapSL2$ATDR, dfCapSL2$HTOR, dfCapSL2$HTDR, dfCapSL2$`Away Score`, dfCapSL2$`Home Score`)
dfLine2 <- select(dfCapSL2, dfCapSL2$`Away Team`, dfCapSL2$`Home Team`, dfCapSL2$Line, dfCapSL2$ATOR, dfCapSL2$ATDR, dfCapSL2$HTOR, dfCapSL2$HTDR, dfCapSL2$`Away Score`, dfCapSL2$`Home Score`)
dfLine <- select(dfCapSL2, `Away Score`)
dfLine <- select(dfCapSL2, `Away Team`, `Home Team`, `Line`, `ATOR`, `ATDR`, `HTOR`, `HTDR`, `Away Score`, `Home Score`)
View(dfLine)
dfLine <- mutate(dfLine, Predictor = (ATOR-HTOR)+(HTDR-ATDR))
dfLine$Predictor <- dfLine$Predictor*100
dfLine <- mutate(dfLine, if(`Line` > `Predictor`){Prediction = `Home Team`} else{Prediction = `Away Team`})
colnames(dfLine)[11] <- "Prediction"
dfLine <- mutate(dfLine, if(`Line` > (`Away Score`-`Home Score)){Line Winner = `Away Team`} else{Line Winner = `Home Team`})
dfLine <- mutate(dfLine, if(`Line` > (`Away Score`-`Home Score`)){Line Winner = `Away Team`} else{Line Winner = `Home Team`}
dfLine <- mutate(dfLine, if(`Line` > (`Away Score`-`Home Score)){`Line Winner` = `Away Team`} else{`Line Winner` = `Home Team`}
dfLine <- mutate(dfLine, if(`Line` > (`Away Score`-`Home Score)){LineWinner = `Away Team`} else{LineWinner = `Home Team`}
dfLine <- mutate(dfLine, if(`Line` > (`Away Score`-`Home Score)){Line Winner = dfLine$Away Team} else{Line Winner = dfLine$`Home Team`}
dfLine <- mutate(dfLine, if(dfLine$Line > (dfLine$`Away Score`-dfLine$`Home Score`)){LineWinner = dfLine$`Away Team`} else{LineWinner = dfLine$`Home Team`})
dfLine <- mutate(dfLine, if(dfLine$Line > (dfLine$`Away Score`- dfLine$`Home Score`)){LineWinner = dfLine$`Away Team`} else{LineWinner = dfLine$`Home Team`})
dfLine <- mutate(dfLine, if(dfLine$Line > (dfLine$`Away Score`-dfLine$`Home Score`)){LineWinner == dfLine$`Away Team`} else{LineWinner == dfLine$`Home Team`})
dfLine <- mutate(dfLine, if(dfLine$Line > (dfLine$`Away Score`-dfLine$`Home Score`)){`LineWinner` == dfLine$`Away Team`} else{`LineWinner` == dfLine$`Home Team`})
dfLine <- mutate(dfLine, Result = dfLine$`Away Score`- dfLine$`Home Score`)
print(dfLine)
as.numeric(dfLine$`Away Score`)
print(dfLine)
dfLine <- as.numeric(dfLine$`Away Score`)
print(dfLine)
dfLine <- select(dfCapSL2, dfCapSL2$`Away Team`, dfCapSL2$`Home Team`, dfCapSL2$Line, dfCapSL2$ATOR, dfCapSL2$ATDR, dfCapSL2$HTOR, dfCapSL2$HTDR, dfCapSL2$`Away Score`, dfCapSL2$`Home Score`)
dfLine <- select(dfCapSL2, `Away Team`, `Home Team`, `Line`, `ATOR`, `ATDR`, `HTOR`, `HTDR`, `Away Score`, `Home Score`)
> View(dfLine)
print(dfLine)
dfLine$`Away Score` <- as.numeric(dfLine$`Away Score`)
print(dfLine)
dfLine$`Home Score` <- as.numeric(dfLine$`Home Score`)
print(dfLine)
dfLine <- mutate(dfLine, if(dfLine$Line > (dfLine$`Away Score`-dfLine$`Home Score`)){`LineWinner` == dfLine$`Away Team`} else{`LineWinner` == dfLine$`Home Team`})
View(dfLine)
dfLine <- mutate(dfLine, Predictor = (ATOR-HTOR)+(HTDR-ATDR))
dfLine$Predictor <- dfLine$Predictor*100
dfLine <- mutate(dfLine, if(`Line` > `Predictor`){Prediction = `Home Team`} else{Prediction = `Away Team`})
colnames(dfLine)[11] <- "Prediction"
dfLine <- mutate(dfLine, if(dfLine$Line > (dfLine$`Away Score`-dfLine$`Home Score`)){`LineWinner` == dfLine$`Away Team`} else{`LineWinner` == dfLine$`Home Team`})
dfLine <- mutate(dfLine, if(dfLine$Line > (dfLine$`Away Score`-dfLine$`Home Score`)){LineWinner = dfLine$`Away Team`} else{LineWinner = dfLine$`Home Team`})
dfLine$Prediction <- if(dfLine$Line > dfLine$Predictor){dfLine$Prediction = dfLine$`Away Team`} else{dfLine$Prediction = dfLine$`Home Team`}
ifelse(dfLine$Line > dfLine$Predictor, dfLine$Prediction == dfLine$`Away Team`, dfLine$Prediction == dfLine$`Home Team`)
dfLine$Prediction <- ifelse(dfLine$Line > dfLine$Predictor, dfLine$Prediction = dfLine$`Away Team`, dfLine$Prediction = dfLine$`Home Team`)
dfLine$Prediction <- ifelse(dfLine$Line > dfLine$Predictor, dfLine$`Away Team`, dfLine$`Home Team`)
dfLine$Prediction <- ifelse(dfLine$Line < dfLine$Predictor, dfLine$`Away Team`, dfLine$`Home Team`)
colnames(dfLine)[12] <- "Line Result"
dfLine <- mutate(dfLine, Bet Result = ifelse(dfLine$Prediction == dfLine$`Line Result`, "Win", "Lose"))
dfLine <- mutate(dfLine, dfLine$BetResult = ifelse(dfLine$Prediction == dfLine$`Line Result`, "Win", "Lose"))
dfLine <- mutate(dfLine, Bet.Result = ifelse(dfLine$Prediction == dfLine$`Line Result`, "Win", "Lose"))
dfLine$`Line Result` <- ifelse((dfLine$`Away Score`-dfLine$`Home Score`), dfLine$`Away Team`, dfLine$`Home Team`)
dfLine$`Line Result` <- ifelse((dfLine$`Away Score`-dfLine$`Home Score`)>dfLine$Line, dfLine$`Away Team`, dfLine$`Home Team`)
write.csv(dfLine = dfCapTidy)
write.csv(dfLine, file = "dfCapTidy")
write.csv(dfLine, file = "dfCapTidy.csv")
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
library("plyr", lib.loc="~/R/win-library/3.4")
library(readr)
Points_vs_RatingTidy <- read_csv("Points vs RatingTidy.csv")
View(Points_vs_RatingTidy)
colnames(Points_vs_RatingTidy)[1] <- "Year"
View(Points_vs_RatingTidy)
colnames(Points_vs_RatingTidy)[2] <- "Team"
colnames(Points_vs_RatingTidy)[3] <- "OffScore"
colnames(Points_vs_RatingTidy)[4] <- "OffRate"
colnames(Points_vs_RatingTidy)[5] <- "DefScore"
colnames(Points_vs_RatingTidy)[6] <- "DefRate"
View(Points_vs_RatingTidy)
PvROff <- select(Points_vs_RatingTidy, OffScore, OffRate)
PvRDef <- select(Points_vs_RatingTidy, DefScore, DefRate)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_jitter()
View(PvROgg)
print(PvROgg)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_point()
print(PvROgg)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_point() + xlim(0,60)+ylim(0,1.8)
print(PvROgg)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_point() + scale_x_continuous(name="Points per Game Offense", limits=c(0, 70)) + scale_y_continuous(name="Offensive Rating", limits = c(0, 1.8))
print(PvROgg)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_point()
print(PvROgg)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_point() + scale_x_continuous(name="Points per Game Offense", limits=c(0, 70)) + scale_y_continuous(name="Offensive Rating", limits = c(0, 2))
print(PvROgg)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_point()
print(PvROgg)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) +
geom_smooth(method = "lm", se=FALSE, color="blue", formula = y ~ x) +
geom_point() + geom_text(data=eq,aes(x = 25, y = 300,label=V1), parse = TRUE, inherit.aes=FALSE) + facet_grid(group~.)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) +
+     geom_smooth(method = "lm", se=FALSE, color="blue", formula = y ~ x)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_point() + geom_smooth(method = "lm", se=FALSE, color="blue")
print(PvROgg)
print(PvROff)
PvROff$OffScore <- as.numeric(PvROff$OffScore)
PvROff$OffRate <- as.numeric(PvROff$OffRate)
print(PvROff)
print(PvROgg)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_point() + xlim(0,60)+ylim(0,1.8)
print(PvROgg)
PvROgg <- ggplot(PvROff, aes(OffScore, OffRate)) + geom_point() + xlim(5,60)+ylim(0.2,1.5)
print(PvROgg)
PvROgg <- PvROgg + geom_smooth(method = "lm", color = "blue", formula = y~x)
print(PvROgg)
library("ggplot2", lib.loc="~/R/win-library/3.4")
library("dplyr", lib.loc="~/R/win-library/3.4")
library("plyr", lib.loc="~/R/win-library/3.4")
library("magrittr", lib.loc="~/R/win-library/3.4")
print(PvROgg)
print(PvRDef)
PvRDef$DefScore <- as.numeric(PvRDef$DefScore)
PvRDef$DefRate <- as.numeric(PvRDef$DefRate)
PvRDgg <- ggplot(PvRDef, aes(DefScore, DefRate)) + geom_smooth(method = "lm", color = "blue", formula = y~x) + geom_point()
print(PvRDgg)
View(dfLine)
print(dfLine)
dfLine$Bet.Result <- if(dfLine$Prediction == dfLine$`Line Result`){dfLine$Bet.Result == "Win"} else{dfLine$Bet.Result == "Lose"}
dfLine$Bet.Result <- if(dfLine$Prediction == dfLine$`Line Result`){dfLine$Bet.Result = "Win"} else{dfLine$Bet.Result = "Lose"}
dfLine$Bet.Result <- if(dfLine$Prediction == dfLine$`Line Result`){dfLine$Bet.Result == 1} else{dfLine$Bet.Result = 0}
dfLine$Bet.Result <- ifelse(dfLine$Prediction == dfLine$`Line Result`, "Win", "Lose")
library("dplyr", lib.loc="~/R/win-library/3.4")
summarise(dfLine, n(dfLine$Bet.Result))
summarise(dfLine, total_games = n(dfLine$Bet.Result))
count(dfLine, dfLine$Bet.Result, Wins = "Win")
count(dfLine, dfLine$Bet.Result)
2892/5594
View(dfCapSL)
savehistory("~/DSIntroCapstone/CapstoneTest1.Rhistory")
